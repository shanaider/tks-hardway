---
- name: "Make Directory of kubelet "
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  with_items: 
    - "/var/lib/kubernetes/"
    - "/var/lib/kubelet/"

- name: Copy the Cert & Key file from master to worker1-2 
  synchronize:
    src: "/root/{{ item }}"
    dest: "/root/{{ item }}"
    mode: push
  delegate_to: "{{groups['master'][0]}}"
  with_items: 
    - '{{ inventory_hostname }}.pem'
    - '{{ inventory_hostname }}-key.pem'

- name: Copy the kubeconfig & kube-proxy file from master to worker1-2 
  synchronize:
    src: "/root/{{ item }}"
    dest: "/root/{{ item }}"
    mode: push
  delegate_to: "{{groups['master'][0]}}"
  with_items: 
    - '{{ inventory_hostname }}.kubeconfig'
    - 'ca.pem'

- name: "Bootstrapping the Kubernetes Worker Nodes"
  shell: |
    wget -q --show-progress --https-only --timestamping \
      https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz \
      https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl \ 
      https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubelet

    {
      tar -xvf crictl-v1.21.0-linux-amd64.tar.gz
      chmod +x crictl kubectl kubelet 
      sudo mv crictl kubectl kubelet /usr/local/bin/
    }

- name: "Configure the Kubelet"
  shell: |
    {
      sudo mv {{ inventory_hostname }}-key.pem {{ inventory_hostname }}.pem /var/lib/kubelet/
      sudo mv {{ inventory_hostname }}.kubeconfig /var/lib/kubelet/kubeconfig
      sudo mv ca.pem /var/lib/kubernetes/
    }

- name: "Create kubelet service"
  shell: |  
    cat <<EOF | sudo tee /etc/systemd/system/kubelet.service
    [Unit]
    Description=Kubernetes Kubelet
    Documentation=https://github.com/kubernetes/kubernetes
    After={{ cri_service }}
    Requires={{ cri_service }}

    [Service]
    ExecStart=/usr/local/bin/kubelet \\
      --config=/var/lib/kubelet/kubelet-config.yaml \\
      --container-runtime=remote \\
      --container-runtime-endpoint={{ runtime_ep }} \\
      --image-pull-progress-deadline=2m \\
      --kubeconfig=/var/lib/kubelet/kubeconfig \\
      --network-plugin=cni \\
      --register-node=true \\
      --v=2
    Restart=on-failure
    RestartSec=5

    [Install]
    WantedBy=multi-user.target
    EOF

- name: "Configure the Kubelet with nodelocal-dns service"
  shell: |
    cat <<EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
    kind: KubeletConfiguration
    apiVersion: kubelet.config.k8s.io/v1beta1
    authentication:
      anonymous:
        enabled: false
      webhook:
        enabled: true
      x509:
        clientCAFile: "/var/lib/kubernetes/ca.pem"
    authorization:
      mode: Webhook
    clusterDomain: "cluster.local"
    clusterDNS:
      - "{{ localdns_ip if localdns_ip is defined else kubedns}}"
    cgroupDriver: systemd
    runtimeRequestTimeout: "15m"
    tlsCertFile: "/var/lib/kubelet/{{ inventory_hostname }}.pem"
    tlsPrivateKeyFile: "/var/lib/kubelet/{{ inventory_hostname }}-key.pem"
    EOF
  when:
    - local_node_dns | bool

- name: "Configure the Kubelet with kubedns service"
  shell: |
    cat <<EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
    kind: KubeletConfiguration
    apiVersion: kubelet.config.k8s.io/v1beta1
    authentication:
      anonymous:
        enabled: false
      webhook:
        enabled: true
      x509:
        clientCAFile: "/var/lib/kubernetes/ca.pem"
    authorization:
      mode: Webhook
    clusterDomain: "cluster.local"
    clusterDNS:
      - "{{ kubedns |default('192.96.0.10')}}"
    runtimeRequestTimeout: "15m"
    tlsCertFile: "/var/lib/kubelet/{{ inventory_hostname }}.pem"
    tlsPrivateKeyFile: "/var/lib/kubelet/{{ inventory_hostname }}-key.pem"
    EOF
  when:
    - not local_node_dns | bool


- name: 'Reload / Enable / start kubelet'
  systemd:
    name: '{{ item }}'
    state: started
    enabled: yes
    daemon_reload: yes
  with_items: 
    - kubelet